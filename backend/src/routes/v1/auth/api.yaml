tags:
  name: Auth
  description: Authentication system

security:
  - mySecurity: []

/auth/login:
  post:
    summary: Login as user
    tags: [Auth]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                description: must be unique
              password:
                type: string
                format: password
                minLength: 8
                description: At least one number and one letter
            example:
              email: fake@example.com
              password: password1
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      "400":
        description: "Bad request"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              code: 400
              message: "Bad request"

/auth/register:
  post:
    summary: Register as user
    tags: [ Auth ]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
              - repeatPassword
            properties:
              email:
                type: string
                format: email
                description: must be unique
              password:
                type: string
                format: password
                minLength: 8
                description: At least one number and one letter
              repeatPassword:
                type: string
                format: password
                minLength: 8
                description: Must be the same with password
            example:
              email: fake@example.com
              password: password1
              repeatPassword: password1
    responses:
      201:
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      400:
        description: Bad request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              code: 400
              message: "Invalid email"
      422:
        description: User already exists
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              code: 422
              message: "User already exists"

/auth/refresh:
  post:
    summary: Refresh JWT tokens
    tags: [Auth]
    security: []
    responses:
      "200":
        description: OK
        headers:
          Set-Cookie:
            description: Refresh token setting
            schema:
              type: string
              example: "refreshToken=123123123123; Max-age: 1800; Path=/; HttpOnly"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
      "401":
        description: "Unauthorized"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
            example:
              code: 401
              message: "Unauthorized"

/auth/logout:
  post:
    summary: Logout from app
    tags: [Auth]
    security: []
    responses:
      "200":
        description: OK

